{"ast":null,"code":"var _jsxFileName = \"/Users/oanasacalianu/Desktop/reactLearning/udemy/ReactRouting/frontend/src/pages/EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: 'Could not fetch events'\n    };\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["React","useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","isError","message","resData","json","$RefreshReg$"],"sources":["/Users/oanasacalianu/Desktop/reactLearning/udemy/ReactRouting/frontend/src/pages/EventsPage.jsx"],"sourcesContent":["import React from 'react'\nimport { useLoaderData } from 'react-router-dom';\nimport  EventsList from '../components/EventsList.js'\n\n\nfunction EventsPage() {\n\n  const events = useLoaderData();\n\n  return (\n    <div>\n      <EventsList events={events}/>\n    </div>\n  )\n}\n\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if(!response.ok){\n    return {isError: true, message: 'Could not fetch events'}\n  } else {\n    const resData = await response.json();\n    return resData.events\n  }\n}\n\nexport default EventsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAQC,UAAU,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGrD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEpB,MAAMC,MAAM,GAAGN,aAAa,CAAC,CAAC;EAE9B,oBACEG,OAAA;IAAAI,QAAA,eACEJ,OAAA,CAACF,UAAU;MAACK,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV;AAACN,EAAA,CATQD,UAAU;EAAA,QAEFJ,aAAa;AAAA;AAAAY,EAAA,GAFrBR,UAAU;AAWnB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACd,OAAO;MAACC,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAwB,CAAC;EAC3D,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACb,MAAM;EACvB;AACF;AAEA,eAAeF,UAAU;AAAC,IAAAQ,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}